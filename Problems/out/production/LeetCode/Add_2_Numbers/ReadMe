You are given two non-empty linked lists representing two non-negative integers. The digits are stored in reverse order, and each of their nodes contains a single digit. Add the two numbers and return the sum as a linked list.

You may assume the two numbers do not contain any leading zero, except the number 0 itself.



Example 1:


Input: l1 = [2,4,3], l2 = [5,6,4]
Output: [7,0,8]
Explanation: 342 + 465 = 807.
Example 2:

Input: l1 = [0], l2 = [0]
Output: [0]
Example 3:

Input: l1 = [9,9,9,9,9,9,9], l2 = [9,9,9,9]
Output: [8,9,9,9,0,0,0,1]


Only issue is that values greater than  int MAX_VALUE = 2147483647
Will not compute

In the submissions there is a solution that adds two numbers
by only looking at the value of each corresponding node.
I understand why the numbers are stored in reverse. If we had
to add 2 different numbers and one a had 4 digits and the other 3, starting addition
from the same digit position would be vital